#!/bin/bash

#
# GAIA : required LABSIM ground software ecosystem
# Copyright (C) 2012-2016  Nawfel KINANI
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.
# If not, see <http://www.gnu.org/licenses/>.
#

###################################################################
# OpenSceneGraph
###

if [ "${GAIA_THIRD_PARTY_OSG_FOUND}" = true ]; then

	# internal
	GAIA_THIRD_PARTY_OSG_ROOT=$GAIA_THIRD_PARTY_HOME/osg-$GAIA_THIRD_PARTY_OSG_VERSION
	GAIA_THIRD_PARTY_OSG_INCLUDEDIR=$GAIA_THIRD_PARTY_OSG_ROOT/include
	GAIA_THIRD_PARTY_OSG_LIBRARYDIR=$GAIA_THIRD_PARTY_OSG_ROOT/lib64
	GAIA_THIRD_PARTY_OSG_BINARYDIR=$GAIA_THIRD_PARTY_OSG_ROOT/bin

	# info
	GAIA_DISTRIBUTION_DETAIL="$GAIA_DISTRIBUTION_DETAIL\n\t|\t* OpenSceneGraph v.$GAIA_THIRD_PARTY_OSG_VERSION"

	# env
	#OSG_BDT=${BDD_HOME}/Bdt/
	#for path in $(find -L ${OSG_BDT} -maxdepth 1 -type d ! -name Bdt); do
	#	OSG_BDT=$OSG_BDT:$path
	#done

	#OSG_TEXTURE=${BDD_HOME}/Texture/
	#for path in $(find -L ${OSG_TEXTURE} -type d ! -name Texture); do
	#	OSG_TEXTURE=$OSG_TEXTURE:$path
	#done

	#OSG_DYNAMIC=${BDD_HOME}/Dynamic/
	#for path in $(find -L ${OSG_DYNAMIC} -type d ! -name Dynamic); do
	#	OSG_DYNAMIC=$OSG_DYNAMIC:$path
	#done

	#OSG_STATIC=${BDD_HOME}/Static/
	#for path in $(find -L ${OSG_STATIC} -type d ! -name Static); do
	#	OSG_STATIC=$OSG_STATIC:$path
	#done

	#OSG_FILE_PATH=$OSG_BDT:$OSG_TEXTURE:$OSG_DYNAMIC:$OSG_STATIC:$BDD_HOME/INSTRUMENT:$BDD_HOME/IMAGES_PA
	OSGDIR=$GAIA_THIRD_PARTY_OSG_ROOT
	OSG_NOTIFY_LEVEL=NOTICE
	OSG_OPTIMIZER="DEFAULT ~MAKE_FAST_GEOMETRY"
	CPATH=$GAIA_THIRD_PARTY_OSG_INCLUDEDIR:$CPATH
	PATH=$GAIA_THIRD_PARTY_OSG_BINARYDIR:$PATH
	LD_LIBRARY_PATH=$GAIA_THIRD_PARTY_OSG_LIBRARYDIR:$LD_LIBRARY_PATH

	# export
	export OSG_NOTIFY_LEVEL OSG_OPTIMIZER

	# clean
	unset GAIA_THIRD_PARTY_OSG_ROOT
	unset GAIA_THIRD_PARTY_OSG_LIBRARYDIR
	unset GAIA_THIRD_PARTY_OSG_INCLUDEDIR
	unset GAIA_THIRD_PARTY_OSG_BINARYDIR

fi

###################################################################
# SilverLining
###

if [ "${GAIA_THIRD_PARTY_SILVERLINING_FOUND}" = true ]; then

	# internal
	GAIA_THIRD_PARTY_SILVERLINING_ROOT=$GAIA_THIRD_PARTY_HOME/silverlining-$GAIA_THIRD_PARTY_SILVERLINING_VERSION
	GAIA_THIRD_PARTY_SILVERLINING_INCLUDEDIR=$GAIA_THIRD_PARTY_SILVERLINING_ROOT/Public\ Headers
	GAIA_THIRD_PARTY_SILVERLINING_LIBRARYDIR=$GAIA_THIRD_PARTY_SILVERLINING_ROOT/lib/linux

	# info
	GAIA_DISTRIBUTION_DETAIL="$GAIA_DISTRIBUTION_DETAIL\n\t|\t* silverlining v.$GAIA_THIRD_PARTY_SILVERLINING_VERSION"

	# env
	SILVERLINING_DIR=$GAIA_THIRD_PARTY_SILVERLINING_ROOT
	SILVERLINING_PATH=$GAIA_THIRD_PARTY_SILVERLINING_ROOT/Resources
	CPATH=$GAIA_THIRD_PARTY_SILVERLINING_INCLUDEDIR:$CPATH
	LD_LIBRARY_PATH=$GAIA_THIRD_PARTY_SILVERLINING_LIBRARYDIR:$LD_LIBRARY_PATH

	# export
	export SILVERLINING_DIR SILVERLINING_PATH

	# clean
	unset GAIA_THIRD_PARTY_SILVERLINING_ROOT
	unset GAIA_THIRD_PARTY_SILVERLINING_LIBRARYDIR
	unset GAIA_THIRD_PARTY_SILVERLINING_INCLUDEDIR

fi

###################################################################
# FFTSS
###

if [ "${GAIA_THIRD_PARTY_FFTS_FOUND}" = true ]; then

	# internal
	GAIA_THIRD_PARTY_FFTSS_ROOT=$GAIA_THIRD_PARTY_HOME/fftss-$GAIA_THIRD_PARTY_FFTSS_VERSION
	GAIA_THIRD_PARTY_FFTSS_BINARYDIR=$GAIA_THIRD_PARTY_FFTSS_ROOT/bin
	GAIA_THIRD_PARTY_FFTSS_LIBRARYDIR=$GAIA_THIRD_PARTY_FFTSS_ROOT/lib
	GAIA_THIRD_PARTY_FFTSS_INCLUDEDIR=$GAIA_THIRD_PARTY_FFTSS_ROOT/include

	# info
	GAIA_DISTRIBUTION_DETAIL="$GAIA_DISTRIBUTION_DETAIL\n\t|\t* ffts v.$GAIA_THIRD_PARTY_FFTS_VERSION"

	# env
	CPATH=$GAIA_THIRD_PARTY_FFTSS_INCLUDEDIR:$CPATH
	PATH=$GAIA_THIRD_PARTY_FFTSS_BINARYDIR:$PATH
	LD_LIBRARY_PATH=$GAIA_THIRD_PARTY_FFTSS_LIBRARYDIR:$LD_LIBRARY_PATH

	# clean
	unset GAIA_THIRD_PARTY_FFTS_ROOT
	unset GAIA_THIRD_PARTY_FFTS_LIBRARYDIR
	unset GAIA_THIRD_PARTY_FFTS_INCLUDEDIR
	unset GAIA_THIRD_PARTY_FFTS_BINARYDIR

fi

###################################################################
# Triton
###

if [ "${GAIA_THIRD_PARTY_TRITON_FOUND}" = true ]; then

	# internal
	GAIA_THIRD_PARTY_TRITON_ROOT=$GAIA_THIRD_PARTY_HOME/triton-$GAIA_TRITON_VERSION
	GAIA_THIRD_PARTY_TRITON_INCLUDEDIR=$GAIA_THIRD_PARTY_TRITON_ROOT/Public\ Headers
	GAIA_THIRD_PARTY_TRITON_LIBRARYDIR=$GAIA_THIRD_PARTY_TRITON_ROOT/lib/Linux/x64

	# info
	GAIA_DISTRIBUTION_DETAIL="$GAIA_DISTRIBUTION_DETAIL\n\t|\t* triton v.$GAIA_THIRD_PARTY_TRITON_VERSION"

	# env
	TRITON_DIR=$GAIA_THIRD_PARTY_TRITON_ROOT
	TRITON_PATH=$GAIA_THIRD_PARTY_TRITON_ROOT/Resources
	CPATH=$GAIA_THIRD_PARTY_TRITON_INCLUDEDIR:$CPATH
	LD_LIBRARY_PATH=$GAIA_THIRD_PARTY_TRITON_LIBRARYDIR:$LD_LIBRARY_PATH

	# export
	export TRITON_DIR TRITON_PATH

	# clean
	unset GAIA_THIRD_PARTY_TRITON_ROOT
	unset GAIA_THIRD_PARTY_TRITON_LIBRARYDIR
	unset GAIA_THIRD_PARTY_GDB_INCLUDEDIR

fi

#== EOF
